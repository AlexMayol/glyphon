{"version":3,"file":"Glyphon.stories-5a04016c.js","sources":["../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js","../../src/Glyphon.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { useEffect, useState, useRef } from \"react\";\n\n\ntype TextContainerTag =\n    | 'a'\n    | 'abbr'\n    | 'address'\n    | 'b'\n    | 'bdi'\n    | 'bdo'\n    | 'blockquote'\n    | 'caption'\n    | 'cite'\n    | 'code'\n    | 'del'\n    | 'dfn'\n    | 'div'\n    | 'em'\n    | 'figcaption'\n    | 'h1'\n    | 'h2'\n    | 'h3'\n    | 'h4'\n    | 'h5'\n    | 'h6'\n    | 'i'\n    | 'ins'\n    | 'kbd'\n    | 'label'\n    | 'legend'\n    | 'li'\n    | 'mark'\n    | 'p'\n    | 'pre'\n    | 'q'\n    | 's'\n    | 'samp'\n    | 'small'\n    | 'span'\n    | 'strong'\n    | 'sub'\n    | 'sup'\n    | 'td'\n    | 'th'\n    | 'u'\n    | 'var';\n\ntype Options = {\n    iterationsPerGlyph?: number;\n    speed?: number;\n    glyphs?: string;\n}\ntype Props = {\n    as?: TextContainerTag;\n    options?: Options;\n    alphabet?: string;\n    mode?: 'onhover' | 'onmount'\n    text: string;\n    [key: string]: unknown;\n}\n\nexport const defaultAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nconst defaultOptions = {\n    iterationsPerGlyph: 3,\n    speed: 30,\n    glyphs: defaultAlphabet\n}\n\nconst randomLetter = (alphabet: string[]) => alphabet[Math.floor(Math.random() * alphabet.length)];\n\n\nexport const Glyphon = ({ as = 'span', options = defaultOptions, mode = 'onhover', text, ...rest }: Props) => {\n    const { glyphs = defaultOptions.glyphs, iterationsPerGlyph = defaultOptions.iterationsPerGlyph, speed = defaultOptions.speed } = options\n    const internalID = useRef<string>(`glyph-effect-${text.replace(' ', '_')}_${Math.random()}`);\n    const interval = useRef<NodeJS.Timer>();\n    const intervals = useRef<NodeJS.Timer[]>([]);\n\n    const hasFinished = useRef(true);\n    const iteration = useRef(0);\n    const finalAlphabet = [...new Set(glyphs)];\n\n    const [result, setResult] = useState<string>(text);\n\n    const onHoverEffect = () => {\n        if (!hasFinished.current) return\n        iteration.current = 0;\n        hasFinished.current = false\n\n        interval.current = setInterval(() => {\n            setResult(result =>\n                result.split(\"\").map((_, index) => {\n                    if (index < iteration.current) {\n                        if (text[index] === ' ') return ' '\n                        return text[index];\n                    }\n                    return randomLetter(finalAlphabet)\n                }).join(\"\")\n            );\n\n            if (iteration.current >= text.length) {\n                onFinishEffect()\n            }\n            iteration.current += 1 / iterationsPerGlyph;\n\n        }, speed);\n        intervals.current.push(interval.current)\n    }\n\n    const onMountEffect = () => {\n        if (!hasFinished.current) return\n        iteration.current = 0;\n        interval.current = setInterval(() => {\n            setResult(result =>\n                result.split(\"\").map((_, index) => {\n                    if (index < iteration.current) {\n                        if (text[index] === ' ') return ' '\n                        return text[index];\n                    }\n                    return randomLetter(finalAlphabet)\n                }).join(\"\")\n            )\n\n            if (iteration.current >= text.length) {\n                onFinishEffect()\n            }\n            iteration.current += 1 / iterationsPerGlyph;\n\n\n        }, speed);\n        intervals.current.push(interval.current)\n    }\n\n    const onFinishEffect = () => {\n        hasFinished.current = true;\n        intervals.current.forEach(interval => clearInterval(interval))\n    }\n\n    useEffect(() => {\n        const el = document?.getElementById?.(internalID.current);\n        if (!el) return;\n\n        if (mode === 'onhover') {\n            el.onmouseover = onHoverEffect\n        }\n        if (mode === 'onmount') {\n            el.onmouseover = onMountEffect\n        }\n    })\n\n    const Component = as;\n\n    return (\n        <Component id={internalID.current} {...rest}>\n            {result}\n        </Component>\n    )\n}\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","defaultAlphabet","defaultOptions","randomLetter","alphabet","Glyphon","as","options","mode","text","rest","glyphs","iterationsPerGlyph","speed","internalID","useRef","interval","intervals","hasFinished","iteration","finalAlphabet","result","setResult","useState","onHoverEffect","result2","_","index","onFinishEffect","onMountEffect","interval2","useEffect","el","_a","Component","jsx"],"mappings":"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","x_google_ignoreList":[0,1]}